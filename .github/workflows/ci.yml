name: CI
on: [push]
jobs:
  python-tests:
    runs-on: ubuntu-20.04

    services:
      db:
        image: postgres:11.6
        # Health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

      redis:
        image: redis:5.0.8
        ports:
          - 6379:6379

      elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.7.1
        env:
          network.host: "0.0.0.0"
          http.cors.enabled: "true"
          http.cors.allow-origin: "*"
          rest.action.multi.allow_explicit_index: "false"
          ES_JAVA_OPTS: -Xms512m -Xmx512m
        ports:
          - 9200:9200

      rabbitmq:
        image: rabbitmq
        ports:
          - 5672:5672

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - id: cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/test_requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install test dependencies
        run: pip install -r test_requirements.txt && python setup.py install

      - name: Lint
        run: pylint ./**/*.py

      - name: Tests
        run: sleep 3; tox -- --ignore=build && coverage xml
        env:
          DATABASE_HOST: localhost
          REDIS_URL: redis://localhost:6379/4
          ELASTICSEARCH_URL: http://localhost:9200

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
